#include "c_commonwidget.h"
/*@@@@@@@@@@@常规背景@@@@@@@@@*/
BackgroundFrame::BackgroundFrame(QWidget* parent):QWidget(parent){
    _pixmap=QPixmap(":/Image/FrameBackground.png");
}
void BackgroundFrame::paintEvent(QPaintEvent *){
    QPainter painter(this);
    painter.save();
    painter.setRenderHint(QPainter::SmoothPixmapTransform,true);
    painter.drawPixmap(rect(),_pixmap,_pixmap.rect());
    painter.restore();
}
/*@@@@@@@@@@@管理员背景@@@@@@@@@*/
ManagerBackgroundFrame::ManagerBackgroundFrame(QWidget* parent):QWidget(parent){
    _pixmap=QPixmap(":/Image/FrameBackground.png");
}
void ManagerBackgroundFrame::paintEvent(QPaintEvent *){
    QPainter painter(this);
    painter.save();
    painter.setRenderHint(QPainter::SmoothPixmapTransform,true);
    painter.drawPixmap(rect(),_pixmap,_pixmap.rect());
    painter.restore();
}
/*@@@@@@@@@@@设置图片@@@@@@@@@*/
PixmapLabel::PixmapLabel(QWidget* parent):QWidget(parent){}
void PixmapLabel::setPixmap(QString path){
    _pixmap=QPixmap(path);
    update();
}
void PixmapLabel::paintEvent(QPaintEvent *){
    QPainter painter(this);
    painter.save();
    painter.setRenderHint(QPainter::SmoothPixmapTransform,true);
    painter.drawPixmap(rect(),_pixmap,_pixmap.rect());
    painter.restore();
}
/*@@@@@@@@@@@电池图标@@@@@@@@@*/
PowerFrame::PowerFrame(QWidget* parent):QWidget(parent){
    colorChange = new ColorChange();
    colorChange->setRange(_min,_max);
    colorChange->setStartColor(_startColor);
    colorChange->setEndColor(_endColor);
}
PowerFrame::~PowerFrame(){
    delete colorChange;
}
void PowerFrame::setPower(int currentNum){
    if(currentNum>=0&&currentNum<=100){
        _currentNum = currentNum;
        _currentColor = colorChange->getColor(currentNum);
        update();
    }
}
void PowerFrame::setCharge(bool isCharging){
    _isCharging = isCharging;
    update();
}
void PowerFrame::paintEvent(QPaintEvent *){
    setFixedSize(height()*2.3,height());
    QPainter painter(this);
    painter.save();
    painter.setRenderHint(QPainter::Antialiasing,true);
    QPen pen;
    pen.setColor(QColor(_borderColor));
    pen.setWidthF(2);
    painter.setPen(pen);
    QRectF re(1,1,rect().width()-5,rect().height()-2);
    painter.drawRoundedRect(re,2,2);
    painter.setBrush(QBrush(QColor(_borderColor)));
    painter.setPen(Qt::NoPen);
    QRectF re1(rect().width()-4,(height()-10)/2.0,4,10);
    painter.drawRoundedRect(re1,2,2);
    painter.setBrush(QBrush(QColor(_currentColor)));
    QRectF re2(3,3,(rect().width()-9)/100.0*_currentNum,rect().height()-6);
    painter.drawRoundedRect(re2,2,2);
    if(_isCharging){
        double w = width()-5;
        QPointF robotArrow[6]={
            QPointF(w/4.0*2,height()/5.0),
            QPointF(w/4.0*2,height()/5.0*2),
            QPointF(w/4.0*3,height()/5.0),
            QPointF(w/4.0*2,height()/5.0*4),
            QPointF(w/4.0*2,height()/5.0*3),
            QPointF(w/4.0,height()/5.0*4),
        };
        painter.setBrush(QBrush(QColor(_charingColor)));
        painter.drawPolygon(robotArrow,6);
    }
    painter.restore();
}
/*@@@@@@@@@@@信号图标@@@@@@@@@*/
SignalFrame::SignalFrame(QWidget* parent):QWidget(parent){
    setSignal(0);
}
void SignalFrame::setSignal(quint8 CSQ){
    if(CSQ>0&&CSQ<=11){
        _signalValue=1;
    }else if(CSQ<18&&CSQ>11){
        _signalValue=2;
    }else if(CSQ==99||CSQ==0){
        _signalValue=0;
    }else{
        _signalValue=3;
    }
    update();
}
void SignalFrame::paintEvent(QPaintEvent *){
    QPainter painter(this);
    painter.save();
    painter.setRenderHint(QPainter::Antialiasing,true);
    double wunit=width()/11.0;
    double hunit=height()/8.0;
    painter.setPen(Qt::NoPen);
    painter.setBrush(QBrush("#818181"));
    QRectF re00=QRectF(0,hunit*6,wunit*2,hunit*2);
    QRectF re01=QRectF(wunit*3,hunit*4,wunit*2,hunit*4);
    QRectF re02=QRectF(wunit*6,hunit*2,wunit*2,hunit*6);
    QRectF re03=QRectF(wunit*9,0,wunit*2,hunit*8);
    painter.drawRoundedRect(re00,2,2);
    painter.drawRoundedRect(re01,2,2);
    painter.drawRoundedRect(re02,2,2);
    painter.drawRoundedRect(re03,2,2);
    painter.setBrush(QBrush("#FFFFFF"));
    if(_signalValue==0){
        painter.drawRoundedRect(re00,2,2);
    }else if(_signalValue==1){
        painter.drawRoundedRect(re00,2,2);
        painter.drawRoundedRect(re01,2,2);
    }else if(_signalValue==2){
        painter.drawRoundedRect(re00,2,2);
        painter.drawRoundedRect(re01,2,2);
        painter.drawRoundedRect(re02,2,2);
    }else if(_signalValue==3){
        painter.drawRoundedRect(re00,2,2);
        painter.drawRoundedRect(re01,2,2);
        painter.drawRoundedRect(re02,2,2);
        painter.drawRoundedRect(re03,2,2);
    }
    painter.restore();
}
/*@@@@@@@@@@@商品条目@@@@@@@@@*/
GoodsItemFrame::GoodsItemFrame(QWidget* parent):QWidget(parent){
    _backgroundColor=QColor("#FFFFFF");
    _backgroundColor.setAlpha(100);
    setFixedHeight(50);
}
void GoodsItemFrame::setGoodsInfo(HMI::GOODS_INFO goodsInfo){
    _goodsInfo=goodsInfo;
    QUrl imageUrl(goodsInfo.listPicture);
    QNetworkRequest request;
    request.setUrl(imageUrl);
    request.setRawHeader("User-Agent","Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)");
    _manager->get(request);
    update();
}
void GoodsItemFrame::finishedSlot(QNetworkReply* reply){
    QByteArray bytes=reply->readAll();
    _pixmap.loadFromData(bytes);
    reply->close();
    reply->deleteLater();
    update();
}
void GoodsItemFrame::paintEvent(QPaintEvent *){
    QRect pictureRect(2,2,46,46);
    QRect nameRect(50,0,width()-250,25);
    QRect priceRect(50,25,width()-250,25);
    QRect numberRect(width()-200,0,100,50);
    QRect amountRect(width()-100,0,100,50);
    QString name=_goodsInfo.goodsName;
    QString number=QString::number(_goodsInfo.buyNumber);
    QString amount;
    QString price;
    if(_goodsInfo.packType==HMI::PACK_JINGBAOZHUANG||_goodsInfo.packType==HMI::PACK_YUBAOZHUANG){
        amount="¥"+QString::number(_goodsInfo.sellingPrice*_goodsInfo.buyNumber/100.0,'f',2)+"元";
        price="¥"+QString::number(_goodsInfo.sellingPrice/100.0,'f',2)+"元/"+_goodsInfo.speInfo;
    }else{
        amount="¥"+QString::number(_goodsInfo.sellingPrice/(float)_goodsInfo.unitWeight*_goodsInfo.buyNumber/100.0,'f',2)+"元";
        price="¥"+QString::number(_goodsInfo.sellingPrice/100.0,'f',2)+"元/"+QString::number(_goodsInfo.unitWeight)+"克";
    }
    QPainter painter(this);
    painter.save();
    painter.setRenderHints(QPainter::Antialiasing|QPainter::SmoothPixmapTransform|QPainter::TextAntialiasing,true);
    painter.setPen(Qt::NoPen);
    painter.setBrush(QBrush(_backgroundColor));
    painter.drawRoundRect(rect(),5,5);
    QPainterPath path;
    path.addRoundedRect(pictureRect,5,5);
    painter.setClipPath(path);
    painter.drawPixmap(pictureRect,_pixmap,_pixmap.rect());
    QPen pen;
    pen.setColor(QColor("#FFFFFF"));
    painter.setPen(pen);
    QFont font;
    font.setBold(true);
    font.setPointSize(15);
    painter.drawText(nameRect,Qt::AlignVCenter|Qt::AlignLeft,name);
    painter.drawText(numberRect,Qt::AlignVCenter|Qt::AlignLeft,number);
    painter.drawText(amountRect,Qt::AlignVCenter|Qt::AlignLeft,amount);
    QPen pen0;
    pen0.setColor(QColor("#C5C5C5"));
    painter.setPen(pen0);
    QFont font0;
    font0.setPointSize(13);
    painter.drawText(priceRect,Qt::AlignVCenter|Qt::AlignLeft,price);
}
/*@@@@@@@@@@@开关条目@@@@@@@@@*/
SwitchItemFrame::SwitchItemFrame(QWidget* parent):QWidget(parent){
    _backgroundColor=QColor("#FFFFFF");
    _backgroundColor.setAlpha(100);
    setFixedHeight(40);
}
void SwitchItemFrame::setName(QString name){
    _name=name;
    update();
}
void SwitchItemFrame::setTip(QString tip){
    _tip=tip;
    update();
}
void SwitchItemFrame::setPixmap(QString path){
    _pixmap=QPixmap(path);
    update();
}
void SwitchItemFrame::setBool(bool isTrue){
    _isTrue=isTrue;
    update();
}
void SwitchItemFrame::resizeEvent(QResizeEvent *){
    _switchRect=QRect(width()-80,5,50,30);
}
void SwitchItemFrame::mousePressEvent(QMouseEvent *event){
    QPoint pos=event->pos();
    if(_switchRect.contains(pos)){
        _isTrue=!_isTrue;
        emit changedSignal(_isTrue);
        if(_isTrue){
            _ellipseRect=QRect(width()-58,7,26,26);
            _switchColor=QColor("#20DA62");
        }else{
            _ellipseRect=QRect(width()-78,7,26,26);
            _switchColor=QColor("#A5A5A5");
        }
        update();
    }
}
void SwitchItemFrame::paintEvent(QPaintEvent *){
    QRect pixmapRect(2,2,26,26);
    QRect nameRect(30,0,width()-80,20);
    QRect tipRect(30,20,width()-80,10);
    QPainter painter(this);
    painter.save();
    painter.setRenderHints(QPainter::Antialiasing|QPainter::SmoothPixmapTransform|QPainter::TextAntialiasing,true);
    painter.setPen(Qt::NoPen);
    painter.setBrush(QBrush(_backgroundColor));
    painter.drawRoundRect(rect(),5,5);
    painter.drawPixmap(pixmapRect,_pixmap,_pixmap.rect());
    painter.setPen(QPen(QColor("#FFFFFF")));
    QFont font;
    font.setBold(true);
    font.setPointSize(15);
    painter.setFont(font);
    painter.drawText(nameRect,Qt::AlignVCenter|Qt::AlignLeft,_name);
    painter.setPen(QPen(QColor("#D7D7D7")));
    QFont font01;
    font.setPointSize(12);
    painter.setFont(font);
    painter.drawText(tipRect,Qt::AlignVCenter|Qt::AlignLeft,_tip);
    painter.setBrush(_switchColor);
    painter.drawRoundedRect(_switchRect,15,15);
    painter.setBrush(QColor("#FFFFFF"));
    painter.drawEllipse(_ellipseRect);
    painter.restore();
}
/*@@@@@@@@@@@滑动窗口@@@@@@@@@*/
SlideFrame::SlideFrame(QWidget* parent):QWidget(parent){
    _centralFrame=new QWidget(this);
    _centralLayout=new QVBoxLayout(_centralFrame);
    _centralLayout->setContentsMargins(0,0,0,0);
    _centralLayout->setSpacing(5);
}
void SlideFrame::addItem(QWidget* item){
    item->setParent(_centralFrame);
    _centralLayout->addWidget(item);
    _itemList.append(item);
    _centralHeight+=55;
    _centralFrame->setFixedHeight(_centralHeight);
}
void SlideFrame::clearItems(){
    _centralHeight=0;
    _centralFrame->setFixedHeight(_centralHeight);
    for(int i=0;i<_itemList.length();i++){
        _centralLayout->removeWidget(_itemList[i]);
        _itemList[i]->deleteLater();
    }
    _itemList.clear();
}
void SlideFrame::resizeEvent(QResizeEvent *){
    _centralFrame->setFixedWidth(_centralFrame->width());
}
void SlideFrame::mousePressEvent(QMouseEvent *event){
    _startPos=event->pos();
}
void SlideFrame::mouseMoveEvent(QMouseEvent *event){
    QPointF distance=event->pos()-_startPos;
    keep(_centralY+distance.y());
}
void SlideFrame::mouseReleaseEvent(QMouseEvent *){
    _centralY=_centralFrame->y();
}
void SlideFrame::keep(double y){
    double ch = _centralFrame->height();
    double h = height();
    if(y>0){y=0;}
    if(ch>h&&y<(h-ch)){y = h-ch;}
    if(ch<=h){y=0;}
    _centralFrame->move(0,y);
}
/*@@@@@@@@@@@键盘按键@@@@@@@@@*/
KeyboardButton::KeyboardButton(QWidget* parent):QPushButton(parent){
    setFocusPolicy(Qt::NoFocus);
    setSizePolicy(QSizePolicy::Expanding,QSizePolicy::Expanding);
    setFixedSize(50,50);
    _backgroundColor=QColor("#FFFFFF");
    _backgroundColor.setAlpha(100);
    _sound=new QSound(":/Music/number.wav",this);
    connect(this,SIGNAL(clicked()),this,SLOT(clickedSlot()));
}
void KeyboardButton::setNumber(quint8 number){
    _number=QString::number(number);
    if(number!=10||number!=11){
        _isDrawPixmap=false;
    }else if(number==10){
        _isDrawPixmap=true;
        _pixmap=QPixmap(":/Image/KeyDelete.png");
    }else{
        _isDrawPixmap=true;
        _pixmap=QPixmap(":/Image/KeyOk.png");
    }
}
void KeyboardButton::clickedSlot(){
    _sound->play();
}
void KeyboardButton::mousePressEvent(QMouseEvent* event){
    QPushButton::mousePressEvent(event);
    _backgroundColor.setAlpha(100);
    update();
}
void KeyboardButton::mouseReleaseEvent(QMouseEvent* event){
    QPushButton::mouseReleaseEvent(event);
    _backgroundColor.setAlpha(200);
    update();
}
void KeyboardButton::paintEvent(QPaintEvent *){Ke
    QPainter painter(this);
    painter.save();
    painter.setRenderHints(QPainter::Antialiasing|QPainter::SmoothPixmapTransform|QPainter::TextAntialiasing,true);
    painter.setPen(Qt::NoPen);
    painter.setBrush(QBrush(_backgroundColor));
    painter.drawEllipse(rect());
    if(_isDrawPixmap){
        QRect pixmapRect(5,5,40,40);
        painter.drawPixmap(pixmapRect,_pixmap,_pixmap.rect());
    }else{
        painter.setPen(QColor("#FFFFFF"));
        QFont font;
        font.setBold(true);
        font.setPointSize(20);
        painter.drawText(rect(),Qt::AlignCenter,_number);
    }
    painter.restore();
}
/*@@@@@@@@@@@键盘@@@@@@@@@*/
